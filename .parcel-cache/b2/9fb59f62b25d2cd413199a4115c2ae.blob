{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js","./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js","./node_modules/@babel/runtime/helpers/defineProperty.js","./src/script.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = privateMap.get(receiver);\n\n  if (!descriptor) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}\n\nmodule.exports = _classPrivateFieldGet;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = privateMap.get(receiver);\n\n  if (!descriptor) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n\n  return value;\n}\n\nmodule.exports = _classPrivateFieldSet;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict';\r\n\r\n//Select all Relevant HTML Elements\r\nconst form = document.querySelector('.form');\r\nconst containerWorkouts = document.querySelector('.workouts');\r\nconst inputType = document.querySelector('.form__input--type');\r\nconst inputDistance = document.querySelector('.form__input--distance');\r\nconst inputDuration = document.querySelector('.form__input--duration');\r\nconst inputCadence = document.querySelector('.form__input--cadence');\r\nconst inputElevation = document.querySelector('.form__input--elevation');\r\nconst deleteAll = document.querySelector('.workouts__deleteAll');\r\nconst sortBy = document.querySelector('.sort-by');\r\nconst instructions = document.querySelector('.instructions');\r\n\r\nclass Workout {\r\n  id = (Date.now() + '').slice(-7);\r\n  constructor(date, coords, distance, duration) {\r\n    this.date = new Date(date); //date\r\n    this.coords = coords; // [lat, lng]\r\n    this.distance = distance; //km\r\n    this.duration = duration; //min\r\n  }\r\n  description() {\r\n    // prettier-ignore\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n    return `${this.type[0].toUpperCase()}${this.type.slice(1)} on \r\n    ${\r\n      months[this.date.getMonth()]\r\n    } ${this.date.getDate()}, ${this.date.getFullYear()}`;\r\n  }\r\n}\r\n\r\nclass Running extends Workout {\r\n  type = 'running';\r\n  constructor(date, coords, distance, duration, cadence) {\r\n    super(date, coords, distance, duration);\r\n    this.cadence = cadence;\r\n    this.calcPace();\r\n    this.description = this.description();\r\n  }\r\n  calcPace() {\r\n    this.pace = this.duration / this.distance; //min/km\r\n    return this.pace;\r\n  }\r\n}\r\n\r\nclass Cycling extends Workout {\r\n  type = 'cycling';\r\n  constructor(date, coords, distance, duration, elevationGain) {\r\n    super(date, coords, distance, duration);\r\n    this.elevationGain = elevationGain;\r\n    this.description = this.description();\r\n    this.calcSpeed();\r\n  }\r\n  calcSpeed() {\r\n    this.speed = this.distance / (this.duration / 60); //km/h\r\n    return this.speed;\r\n  }\r\n}\r\n\r\nclass App {\r\n  #map;\r\n  #marker;\r\n  #workouts = [];\r\n  #zoomLevel = 13;\r\n  #workoutDate = '';\r\n\r\n  constructor() {\r\n    //object initialization through class App methods\r\n    this._getPosition();\r\n    this._getLocalStorage();\r\n    this._checkExistingWorkouts();\r\n    //All event listners\r\n    form.addEventListener('submit', this._newWorkout.bind(this));\r\n    inputType.addEventListener('change', this._toggleElevationField);\r\n    containerWorkouts.addEventListener(\r\n      'click',\r\n      function (e) {\r\n        this._moveToPopUp(e);\r\n        this._deleteWorkout(e);\r\n        this._editWorkout(e);\r\n      }.bind(this)\r\n    );\r\n    deleteAll.addEventListener('click', this._deleteAllWorkouts.bind(this));\r\n    sortBy.addEventListener('change', this._sortBy.bind(this));\r\n    //Note: binding this keyword to callback is important when working with classes\r\n  }\r\n\r\n  _getPosition() {\r\n    navigator.geolocation.getCurrentPosition(\r\n      this._loadMap.bind(this),\r\n      function () {\r\n        alert(\r\n          `Location Not Enabled OR Found. Please refresh the page and ALLOW location to start using the app. Thank You`\r\n        );\r\n      }\r\n    );\r\n  }\r\n  _loadMap(pos) {\r\n    //callback function\r\n    const { latitude } = pos.coords;\r\n    const { longitude } = pos.coords;\r\n    const coords = [latitude, longitude];\r\n    //adding Leaflet\r\n\r\n    //map and marker object intialization\r\n    this.#map = L.map('map').setView(coords, this.#zoomLevel);\r\n    this.#marker = L.marker(coords);\r\n    //adding tile layer\r\n    L.tileLayer('http://{s}.tile.thunderforest.com/outdoors/{z}/{x}/{y}.png', {\r\n      attribution:\r\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(this.#map);\r\n    //display map markers from the storage\r\n    this._displayLocalStorageMapMarkers();\r\n    //setting the map view and zoom level based on current location\r\n    this.#map.setView(coords, this.#zoomLevel, {\r\n      animate: false,\r\n    });\r\n    //listen to any click event on the map and display the workout form\r\n    this.#map.on('click', this._showForm.bind(this));\r\n  }\r\n  _showForm(e) {\r\n    //callback function\r\n    //getting lat lng of where user clicked\r\n    const { lat: latitude, lng: longitude } = e.latlng;\r\n    //if current marker is not attached to a workout, remove it -- else update current marker\r\n    if (!this.#marker.isPopupOpen()) this.#marker.remove();\r\n    this.#marker = L.marker([latitude, longitude]).addTo(this.#map);\r\n    //hide the getting started instructions\r\n    instructions.classList.add('hide__instructions');\r\n    //show the form\r\n    form.classList.remove('hidden');\r\n    inputType.focus();\r\n  }\r\n  _toggleElevationField() {\r\n    //callback function\r\n    //to toggle between cadence and elevation fields\r\n    inputCadence.closest('.form__row').classList.toggle('form__row--hidden');\r\n    inputElevation.closest('.form__row').classList.toggle('form__row--hidden');\r\n  }\r\n\r\n  _newWorkout(e) {\r\n    e.preventDefault();\r\n\r\n    let workout;\r\n    const { lat: latitude, lng: longitude } = this.#marker.getLatLng();\r\n    const coords = [latitude, longitude];\r\n    const date = this._checkExistingWorkoutDate();\r\n\r\n    const inputValidations = function (...inputs) {\r\n      //using rest parameters\r\n      const validIntegers = inputs.every(input => Number.isFinite(input));\r\n      const positiveIntegers = inputs.every(input => input > 0);\r\n      return validIntegers && positiveIntegers;\r\n    };\r\n    //Get data from the form\r\n    const type = inputType.value;\r\n    const distance = Number(inputDistance.value);\r\n    const duration = Number(inputDuration.value);\r\n    //if workout is running, create a running object\r\n    if (type === 'running') {\r\n      const cadence = Number(inputCadence.value);\r\n      //Check if the input is valid\r\n      if (!inputValidations(distance, duration, cadence))\r\n        return alert(\r\n          `Please enter a value. \\n  Values MUST be a positive number.`\r\n        ); //guard clause\r\n\r\n      //create a running object\r\n      workout = new Running(date, coords, distance, duration, cadence);\r\n    }\r\n    //if workout is cycling, create a cycling object\r\n    if (type === 'cycling') {\r\n      const elevation = Number(inputElevation.value);\r\n      //Check if the input is valid\r\n      if (!inputValidations(distance, duration) && isNaN(elevation))\r\n        return alert(\r\n          `Please enter a value. \\n  Values MUST be a positive number.`\r\n        ); //guard clause\r\n\r\n      //create a cycling object\r\n      workout = new Cycling(date, coords, distance, duration, elevation);\r\n    }\r\n\r\n    //add the new object to workout array\r\n    this.#workouts.push(workout);\r\n\r\n    //Render workout on a map as a marker\r\n    this._renderWorkoutOnMap(workout);\r\n\r\n    //Render workout on the list\r\n    this._renderWorkoutOnList(workout);\r\n\r\n    //Check if there is need to display DeleteAll or Sort buttons\r\n    this._checkExistingWorkouts();\r\n\r\n    //Hide form and clear input fields\r\n    this._resetFields();\r\n\r\n    //save wokouts to local storage\r\n    this._setLocalStorage();\r\n  }\r\n  _renderWorkoutOnMap(workout) {\r\n    this.#marker\r\n      .bindPopup(\r\n        L.popup({\r\n          maxWidth: 250,\r\n          minWidth: 100,\r\n          autoClose: false,\r\n          closeOnClick: false,\r\n          closeButton: false,\r\n          className: `${workout.type}-popup`,\r\n        }).setContent(\r\n          `${workout.type === 'running' ? '🏃‍♂️' : '🚴‍'} ${workout.description}`\r\n        )\r\n      )\r\n      .openPopup();\r\n  }\r\n  _renderWorkoutOnList(workout) {\r\n    let html = `\r\n    <li class=\"workout workout--${workout.type}\" data-id=\"${workout.id}\">\r\n      <h2 class=\"workout__title\">${workout.description}</h2>\r\n      <span class=\"workout__edit\"><i class=\"fas fa-edit\"></i></span>\r\n      <span class=\"workout__delete\"><i class=\"far fa-trash-alt\"></i></span>\r\n      <div class=\"workout__details\">\r\n        <span class=\"workout__icon\">${\r\n          workout.type === 'running' ? '🏃‍♂️' : '🚴‍'\r\n        }</span>\r\n        <span class=\"workout__value\">${workout.distance}</span>\r\n        <span class=\"workout__unit\">km</span>\r\n      </div>\r\n      <div class=\"workout__details\">\r\n        <span class=\"workout__icon\">⏱</span>\r\n        <span class=\"workout__value\">${workout.duration}</span>\r\n        <span class=\"workout__unit\">min</span>\r\n      </div>`;\r\n    if (workout.type === 'running') {\r\n      html =\r\n        html +\r\n        `\r\n        <div class=\"workout__details\">\r\n        <span class=\"workout__icon\">⚡️</span>\r\n        <span class=\"workout__value\">${workout.pace?.toFixed(1)}</span>\r\n        <span class=\"workout__unit\">min/km</span>\r\n      </div>\r\n      <div class=\"workout__details\">\r\n        <span class=\"workout__icon\">🦶🏼</span>\r\n        <span class=\"workout__value\">${workout.cadence}</span>\r\n        <span class=\"workout__unit\">spm</span>\r\n      </div>\r\n    </li>`;\r\n    }\r\n    if (workout.type === 'cycling') {\r\n      html =\r\n        html +\r\n        `\r\n        <div class=\"workout__details\">\r\n        <span class=\"workout__icon\">⚡️</span>\r\n        <span class=\"workout__value\">${workout.speed?.toFixed(1)}</span>\r\n        <span class=\"workout__unit\">km/h</span>\r\n      </div>\r\n      <div class=\"workout__details\">\r\n        <span class=\"workout__icon\">⛰</span>\r\n        <span class=\"workout__value\">${workout.elevationGain}</span>\r\n        <span class=\"workout__unit\">m</span>\r\n      </div>\r\n    </li>`;\r\n    }\r\n    form.insertAdjacentHTML('afterend', html);\r\n  }\r\n  _moveToPopUp(e) {\r\n    if (!e.target.closest('.workout')) return;\r\n    const workoutId = e.target.closest('.workout').dataset.id;\r\n    const workout = this.#workouts.find(workout => workout.id === workoutId);\r\n    this.#map.setView(workout.coords, this.#zoomLevel, {\r\n      animate: true,\r\n      duration: 1,\r\n    });\r\n  }\r\n  _resetFields() {\r\n    inputCadence.value = inputDistance.value = inputDuration.value = inputElevation.value =\r\n      '';\r\n    inputDistance.blur();\r\n    inputCadence.blur();\r\n    inputDuration.blur();\r\n    inputElevation.blur();\r\n    form.style.display = 'none';\r\n    form.classList.add('hidden');\r\n    setTimeout(() => (form.style.display = 'grid'), 1000);\r\n  }\r\n  _setLocalStorage() {\r\n    //stringify arrays and objects\r\n    localStorage.setItem('workouts', JSON.stringify(this.#workouts));\r\n\r\n    //this option for storage is not recommended\r\n    //all the inherited properties and methods will be lost\r\n    //Experiment by creating public methods eg: click()\r\n  }\r\n  _displayLocalStorageMapMarkers() {\r\n    //display and set workouts markers on the map, if any when the map loads for the first time\r\n    if (!this.#workouts.length > 1)\r\n      return console.log(`No workouts found in local storage`);\r\n    this.#workouts.forEach(workout => {\r\n      this.#marker = L.marker(workout.coords).addTo(this.#map);\r\n      this._renderWorkoutOnMap(workout);\r\n    });\r\n  }\r\n  _populateForm(workout) {\r\n    inputType.value = workout.type;\r\n    inputDistance.value = workout.distance;\r\n    inputDuration.value = workout.duration;\r\n    this.#marker = L.marker(workout.coords).addTo(this.#map);\r\n    if (workout.type === 'running') {\r\n      inputCadence.value = workout.cadence;\r\n      inputCadence.closest('.form__row').classList.remove('form__row--hidden');\r\n      inputElevation.closest('.form__row').classList.add('form__row--hidden');\r\n    }\r\n    if (workout.type === 'cycling') {\r\n      inputElevation.value = workout.elevationGain;\r\n      inputElevation\r\n        .closest('.form__row')\r\n        .classList.remove('form__row--hidden');\r\n      inputCadence.closest('.form__row').classList.add('form__row--hidden');\r\n    }\r\n    inputDistance.focus();\r\n  }\r\n  _checkExistingWorkoutDate = function () {\r\n    let date = new Date();\r\n    if (this.#workoutDate) {\r\n      date = this.#workoutDate;\r\n      this.#workoutDate = '';\r\n    }\r\n    return new Date(date);\r\n  };\r\n  _editWorkout(e) {\r\n    if (!e.target.closest('.workout__edit')) return;\r\n    const workout = e.target.closest('.workout');\r\n    const workoutId = workout.dataset.id;\r\n    const workoutToEdit = this.#workouts.find(\r\n      workout => workout.id === workoutId\r\n    );\r\n    this.#workoutDate = workoutToEdit.date;\r\n    workout.style.display = 'none';\r\n    form.classList.remove('hidden');\r\n    //hide the getting started instructions\r\n    instructions.classList.add('hide__instructions');\r\n    setTimeout(() => (form.style.display = 'grid'), 1000);\r\n    this._populateForm(workoutToEdit);\r\n    this.#workouts.splice(this.#workouts.indexOf(workoutToEdit), 1);\r\n  }\r\n  _getLocalStorage() {\r\n    //parse data using JSON\r\n    const data = JSON.parse(localStorage.getItem('workouts'));\r\n    //display workouts on the list\r\n    if (!data) return;\r\n    this.#workouts = data;\r\n    this.#workouts.forEach(workout => this._renderWorkoutOnList(workout));\r\n  }\r\n  _deleteWorkout(e) {\r\n    if (!e.target.closest('.workout__delete')) return;\r\n    const workout = e.target.closest('.workout');\r\n    workout.style.display = 'none';\r\n    const workoutId = workout.dataset.id;\r\n    const workoutToDelete = this.#workouts.find(\r\n      workout => workout.id === workoutId\r\n    );\r\n    this.#workouts.splice(this.#workouts.indexOf(workoutToDelete), 1);\r\n    this.#map.eachLayer(function (layer) {\r\n      if (layer.options.attribution) return;\r\n      layer.remove();\r\n    });\r\n    this._displayLocalStorageMapMarkers();\r\n    this._setLocalStorage();\r\n    this._checkExistingWorkouts();\r\n  }\r\n  _deleteAllWorkouts(e) {\r\n    this.reset();\r\n  }\r\n  _checkExistingWorkouts() {\r\n    if (this.#workouts.length < 1) {\r\n      deleteAll.style.display = 'none';\r\n      sortBy.style.display = 'none';\r\n    } else {\r\n      deleteAll.style.display = 'flex';\r\n      sortBy.style.display = 'flex';\r\n    }\r\n  }\r\n  _sortByData(data) {\r\n    const newOrder = this.#workouts.sort((wa, wb) => wa[data] - wb[data]);\r\n    const currentWorkouts = document.querySelectorAll('.workout');\r\n    currentWorkouts.forEach(el => (el.style.display = 'none'));\r\n    newOrder.forEach(el => this._renderWorkoutOnList(el));\r\n  }\r\n  _sortByDate() {\r\n    const newOrder = this.#workouts.sort(\r\n      (wa, wb) => new Date(wb.date) - new Date(wa.date)\r\n    );\r\n    const currentWorkouts = document.querySelectorAll('.workout');\r\n    currentWorkouts.forEach(el => (el.style.display = 'none'));\r\n    newOrder.forEach(el => this._renderWorkoutOnList(el));\r\n  }\r\n  _sortBy() {\r\n    if (sortBy.value === 'distance') this._sortByData('distance');\r\n    if (sortBy.value === 'duration') this._sortByData('duration');\r\n    if (sortBy.value === 'date') this._sortByDate();\r\n  }\r\n  reset() {\r\n    //the only public method\r\n    //direct access in console through app object\r\n    localStorage.removeItem('workouts');\r\n    location.reload();\r\n  }\r\n}\r\nconst app = new App();\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","receiver","privateMap","descriptor","get","TypeError","call","value","$59752bbd881e1f9bef2e9de21b48d89a$export$default","$59752bbd881e1f9bef2e9de21b48d89a$exports","set","writable","$575cff44f71625ad88743552d1f6948b$export$default","$575cff44f71625ad88743552d1f6948b$exports","obj","key","Object","defineProperty","enumerable","configurable","$4d69b380366bcc2f2e5145a7987ed1c2$export$default","$4d69b380366bcc2f2e5145a7987ed1c2$exports","$7f912fa8d6b13fea068c9f4c87e4971d$var$form","document","querySelector","$7f912fa8d6b13fea068c9f4c87e4971d$var$containerWorkouts","$7f912fa8d6b13fea068c9f4c87e4971d$var$inputType","$7f912fa8d6b13fea068c9f4c87e4971d$var$inputDistance","$7f912fa8d6b13fea068c9f4c87e4971d$var$inputDuration","$7f912fa8d6b13fea068c9f4c87e4971d$var$inputCadence","$7f912fa8d6b13fea068c9f4c87e4971d$var$inputElevation","$7f912fa8d6b13fea068c9f4c87e4971d$var$deleteAll","$7f912fa8d6b13fea068c9f4c87e4971d$var$sortBy","$7f912fa8d6b13fea068c9f4c87e4971d$var$instructions","$7f912fa8d6b13fea068c9f4c87e4971d$var$Workout","constructor","date","coords","distance","duration","Date","now","slice","this","description","type","toUpperCase","concat","months","getMonth","getDate","getFullYear","$7f912fa8d6b13fea068c9f4c87e4971d$var$Running","cadence","super","calcPace","pace","$7f912fa8d6b13fea068c9f4c87e4971d$var$Cycling","elevationGain","calcSpeed","speed","$7f912fa8d6b13fea068c9f4c87e4971d$var$app","$7f912fa8d6b13fea068c9f4c87e4971d$var$_workoutDate","_getPosition","_getLocalStorage","_checkExistingWorkouts","addEventListener","_newWorkout","bind","_toggleElevationField","e","_moveToPopUp","_deleteWorkout","_editWorkout","_deleteAllWorkouts","_sortBy","navigator","geolocation","getCurrentPosition","_loadMap","alert","pos","latitude","longitude","$7f912fa8d6b13fea068c9f4c87e4971d$var$_map","L","map","setView","$7f912fa8d6b13fea068c9f4c87e4971d$var$_zoomLevel","$7f912fa8d6b13fea068c9f4c87e4971d$var$_marker","marker","tileLayer","attribution","addTo","_displayLocalStorageMapMarkers","animate","on","_showForm","lat","lng","latlng","isPopupOpen","remove","classList","add","focus","closest","toggle","workout","preventDefault","getLatLng","_checkExistingWorkoutDate","inputValidations","inputs","validIntegers","every","input","Number","isFinite","positiveIntegers","elevation","isNaN","$7f912fa8d6b13fea068c9f4c87e4971d$var$_workouts","push","_renderWorkoutOnMap","_renderWorkoutOnList","_resetFields","_setLocalStorage","bindPopup","popup","maxWidth","minWidth","autoClose","closeOnClick","closeButton","className","setContent","openPopup","html","id","toFixed","insertAdjacentHTML","target","workoutId","dataset","find","blur","style","display","setTimeout","localStorage","setItem","JSON","stringify","length","console","log","forEach","_populateForm","workoutToEdit","splice","indexOf","data","parse","getItem","workoutToDelete","eachLayer","layer","options","reset","_sortByData","newOrder","sort","wa","wb","querySelectorAll","el","_sortByDate","removeItem","location","reload"],"version":3,"file":"index.HASH_REF_d6008f08fe7be6eba8af99534865bf20.js.map"}